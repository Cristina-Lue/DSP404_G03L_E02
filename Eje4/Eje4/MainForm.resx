<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        BiyWoogUQo3VW+FFEEVTVOatRZZVmUlRRaVl/9k=
</value>
  </data>
</root>